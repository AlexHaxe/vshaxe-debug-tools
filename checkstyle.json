{
	"defaultSeverity": "INFO",
	"checks": [{
			"type": "Anonymous"
		},
		{
			"type": "ArrayAccess"
		},
		{
			"type": "ArrayLiteral"
		},
		{
			"props": {
				"format": "^(e)$"
			},
			"type": "CatchParameterName"
		},
		{
			"props": {
				"thresholds": [{
						"complexity": 20,
						"severity": "WARNING"
					},
					{
						"complexity": 25,
						"severity": "ERROR"
					}
				]
			},
			"type": "CyclomaticComplexity"
		},
		{
			"type": "DefaultComesLast"
		},
		{
			"type": "Dynamic"
		},
		{
			"type": "ERegLiteral"
		},
		{
			"props": {
				"max": 1,
				"requireEmptyLineAfterAbstract": false,
				"requireEmptyLineAfterClass": false
			},
			"type": "EmptyLines"
		},
		{
			"type": "EmptyPackage",
			"props": {
				"enforceEmptyPackage": true
			}
		},
		{
			"props": {
				"max": 1,
				"skipSingleLineTypes": true,
				"defaultPolicy": "none",
				"exact": [
					"inFunction",
					"afterPackage",
					"afterImports",
					"betweenTypes",
					"afterAbstractVars",
					"betweenAbstractMethods",
					"afterClassStaticVars",
					"afterClassVars",
					"betweenClassMethods",
					"beginInterface"
				],
				"upto": [
					"betweenImports",
					"beforeUsing",
					"anywhereInFile",
					"betweenAbstractVars",
					"beginClass",
					"betweenClassStaticVars",
					"betweenClassVars",
					"betweenInterfaceFields",
					"beforeFileEnd"
				]
			},
			"type": "ExtendedEmptyLines"
		},
		{
			"props": {
				"max": 2000
			},
			"type": "FileLength"
		},
		{
			"props": {
				"option": "upperCase"
			},
			"type": "HexadecimalLiteral"
		},
		{
			"type": "InnerAssignment"
		},
		{
			"props": {
				"allowMarkerInterfaces": true,
				"allowProperties": false
			},
			"type": "Interface"
		},
		{
			"props": {
				"tokens": [
					"CLASS_DEF",
					"ENUM_DEF",
					"ABSTRACT_DEF",
					"TYPEDEF_DEF",
					"INTERFACE_DEF",
					"FUNCTION",
					"FOR",
					"IF",
					"WHILE",
					"SWITCH",
					"TRY",
					"CATCH"
				],
				"ignoreEmptySingleline": true,
				"option": "eol"
			},
			"type": "LeftCurly"
		},
		{
			"props": {
				"max": 160,
				"ignorePattern": "(^@desc)|(LONG LINE TEST)"
			},
			"type": "LineLength"
		},
		{
			"props": {
				"listeners": [
					"addEventListener",
					"addListener",
					"on",
					"once"
				],
				"format": "^_?[a-z][a-zA-Z0-9]*$"
			},
			"type": "ListenerName"
		},
		{
			"props": {
				"ignoreExtern": true,
				"format": "^[a-z][a-zA-Z0-9]*$"
			},
			"type": "LocalVariableName"
		},
		{
			"props": {
				"maxPrivate": 50,
				"maxPublic": 50,
				"maxTotal": 50
			},
			"type": "MethodCount"
		},
		{
			"props": {
				"ignoreExtern": true,
				"format": "^[a-z][a-zA-Z0-9]*$"
			},
			"type": "MethodName"
		},
		{
			"props": {
				"modifiers": [
					"MACRO",
					"OVERRIDE",
					"PUBLIC_PRIVATE",
					"STATIC",
					"INLINE",
					"DYNAMIC"
				]
			},
			"type": "ModifierOrder"
		},
		{
			"props": {
				"minLength": 2,
				"ignore": "^\\s+$",
				"allowDuplicates": 2
			},
			"type": "MultipleStringLiterals"
		},
		{
			"type": "MultipleVariableDeclarations"
		},
		{
			"type": "NestedForDepth"
		},
		{
			"type": "NestedIfDepth"
		},
		{
			"type": "NestedTryDepth"
		},
		{
			"props": {
				"ignoreExtern": true,
				"format": "^(_|[a-z][a-zA-Z0-9]*$)"
			},
			"type": "ParameterName"
		},
		{
			"props": {
				"max": 7,
				"ignoreOverriddenMethods": false
			},
			"type": "ParameterNumber"
		},
		{
			"type": "RedundantModifier"
		},
		{
			"type": "SimplifyBooleanExpression"
		},
		{
			"type": "SimplifyBooleanReturn"
		},
		{
			"props": {
				"spaceIfCondition": "should",
				"spaceAroundBinop": true,
				"spaceForLoop": "should",
				"ignoreRangeOperator": true,
				"spaceWhileLoop": "should",
				"spaceCatch": "should",
				"spaceSwitchCase": "should",
				"noSpaceAroundUnop": true
			},
			"type": "Spacing"
		},
		{
			"type": "TODOComment"
		},
		{
			"type": "TabForAligning"
		},
		{
			"type": "Trace"
		},
		{
			"type": "TrailingWhitespace"
		},
		{
			"props": {
				"ignoreExtern": true,
				"format": "^[A-Z]+[a-zA-Z0-9]*$"
			},
			"type": "TypeName"
		},
		{
			"type": "UnnecessaryConstructor"
		}
	],
	"exclude": {
		"path": "RELATIVE_TO_PROJECT",
		"all": [],
		"Dynamic": [
			"TokenTreeHtmlPrinter"
		],
		"MemberName": [
			"TokenTreeContentProvider:_onDidChange"
		],
		"MethodLength": [
			"VisFeatureBase"
		]
	}
}